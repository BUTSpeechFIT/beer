#!/usr/bin/env python

'BEER -- the Bayesian spEEch Recognizer'


import argparse
import logging
import random
import numpy as np
import torch

import beer.cli.subcommands as subcommands


logging.basicConfig(format='%(levelname)s: %(message)s')
logger = logging.getLogger()
logger.setLevel(logging.INFO)


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_true',
                        help='show debug messages')
    parser.add_argument('-s', '--seed', type=int, default=-1,
                        help='seed the RNG')

    subparsers = parser.add_subparsers(title='possible commands', metavar='<cmd>')
    subparsers.required = True
    for cmd_name in subcommands.__all__:
        cmd = getattr(subcommands, cmd_name)
        subparser = subparsers.add_parser(cmd_name, help=cmd.__doc__)
        cmd.setup(subparser)
        subparser.set_defaults(func=cmd.main)
    args = parser.parse_args()

    if args.seed >= 0 :
        torch.manual_seed(args.seed)
        np.random.seed(args.seed)
        random.seed(args.seed)

    if args.debug:
        logger.setLevel(logging.DEBUG)
    args.func(args, logger)


if __name__ == '__main__':
    main()
